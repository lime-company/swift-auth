//
// Copyright 2018 Lime - HighTech Solutions s.r.o.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions
// and limitations under the License.
//

// MARK: - Common strings

"limeauth.common.ok"        = "OK";
"limeauth.common.cancel"    = "Cancel";
"limeauth.common.close"     = "Close";
"limeauth.common.yes"       = "Yes";
"limeauth.common.no"        = "No";



// MARK: - Activation

// Activation :: Begin Scene
"limeauth.act.begin.title"                  = "Enter the Activation code";
"limeauth.act.begin.description"            = "Scan the Activation QR code from the ePortal screen. If this fails, retype the Activation code manually by writing down its numeric format from the ePortal screen.";
"limeauth.act.begin.scanButton"             = "Scan the Activation QR code";
"limeauth.act.begin.enterCodeButton"        = "Retype the code manually";

// Activation :: No camera access
"limeauth.act.noCamera.title"               = "Allow camera access";
"limeauth.act.noCamera.description"         = "Application cannot use camera. You can permit it in Settings.";
"limeauth.act.noCamera.settingsButton"      = "Open settings";

// Activation :: Enter Activation Code
"limeauth.act.enterCode.title"              = "Activation code";
"limeauth.act.enterCode.description"        = "Please retype the Activation code in its numeric format from the ePortal screen.";
"limeauth.act.enterCode.confirmButton"      = "Confirm";

// Activation :: Scan Activation Code
"limeauth.act.scanCode.title"               = "Scan the activation QR code";
"limeauth.act.scanCode.fallbackButton"      = "Unsuccessful? Rewrite the code.";

// Activation :: Keys Exchange
"limeauth.act.keysExchange.inProgress"      = "Pairing your device...";

// Activation :: Enable biometry
"limeauth.act.biometry.touchId.title"           = "Confirm payments by fingerprint";
"limeauth.act.biometry.touchId.description"     = "You can sign in and confirm operations just with your fingerprint.";
"limeauth.act.biometry.touchId.enableButton"    = "Allow Touch ID";

"limeauth.act.biometry.faceId.title"            = "Confirm payments by your face";
"limeauth.act.biometry.faceId.description"      = "You can sign in and confirm operations just with your face.";
"limeauth.act.biometry.faceId.enableButton"     = "Allow Face ID";

"limeauth.act.biometry.enableLaterButton"       = "Not now, thank you";

// Activation :: Confirm Scene
"limeauth.act.confirm.title"                = "Complete the Mobile Key activation";
"limeauth.act.confirm.description"          = "Please check whether the Confirmation number displayed matches the number on the ePortal screen. If so, confirm it in ePortal";
"limeauth.act.confirm.inProgress"           = "Waiting for activation completion";
"limeauth.act.confirm.cancelButton"         = "Cancel operation";

// Activation :: Error Scene
"limeauth.act.error.title"                  = "Error";



// MARK: - Authentication

// Comon strings
"limeauth.auth.pleaseWait"                  = "Please wait...";                 // Fallback string when pending operation message is not specified
"limeauth.auth.operationSuccess"            = "Operation succeeded";            // Fallback string when success message for operation is not specified
"limeauth.auth.operationFailure"            = "Operation execution did fail.";  // Generic failure

// PIN prompts
"limeauth.auth.enterPin"                    = "Enter passcode";         // Generic PIN prompt, when prompt for operation is not specified
"limeauth.auth.enterOldPin"                 = "Enter old passcode";
"limeauth.auth.enterNewPin"                 = "Enter new passcode";
"limeauth.auth.retypeNewPin"                = "Retype new passcode";
"limeauth.auth.pinsNotMatch"                = "Passcodes did not match. Try again.";

// Password prompts
"limeauth.auth.enterPassword"               = "Enter password";         // Generic password prompt, when prompt for operation is not specified
"limeauth.auth.enterOldPassword"            = "Enter old password";
"limeauth.auth.enterNewPassword"            = "Enter new password";
"limeauth.auth.retypeNewPassword"           = "Retype new password";
"limeauth.auth.passwordsNotMatch"           = "Passwords did not match. Try again.";

// Biometry buttons
"limeauth.auth.useTouchId"                  = "Use Touch ID";
"limeauth.auth.useFaceId"                   = "Use Face ID";

// Password complexity
"limeauth.auth.changeComplexityButton"      = "Password options";                   // Button in creating password scene
"limeauth.auth.changeComplexityTitle"       = "Choose password complexity";         // Title for action sheet with complexity selection
"limeauth.auth.fixedPin(n)"                 = "%u digits long PIN";                 // "{n} digits long PIN"
"limeauth.auth.variablePin(min,max)"        = "%u up to %u digits long PIN";        // "{min} up to {max} digits long PIN"
"limeauth.auth.password(min)"               = "%u chars or longer password";        // "{min} chars or longer password"

// Remaining attempts
"limeauth.auth.attempts.remaining(n)"       = "%u attempts left";
"limeauth.auth.attempts.last"               = "Your last attempt";


// MARK: - Operations

"limeauth.op.changePass.activity"           = "";   // "Please wait...", but also empty string works well here, because we're just validating password.

"limeauth.op.removeActivation.activity"      = "Removing activation from this device...";
"limeauth.op.removeActivation.success"       = "This device is no longer activated.";
"limeauth.op.removeActivation.touchIdPrompt" = "Confirm activation removal with fingerprint.";

"limeauth.op.enableTouchId.activity"        = "Enabling Touch ID support...";
"limeauth.op.enableTouchId.success"         = "Touch ID has been successfully enabled.";
"limeauth.op.enableFaceId.activity"         = "Enabling Face ID support...";
"limeauth.op.enableFaceId.success"          = "Face ID has been successfully enabled.";

// MARK: - Errors

"limeauth.err.generic"                      = "The communication with the server did fail.";    // Generic error

"limeauth.err.activation"                   = "Unable to register the mobile device with your account. Please try again later.";
"limeauth.err.activation.removed"           = "Device registration has already expired. Please try to register the device one more time.";
"limeauth.err.activation.blocked"           = "The device was blocked during the registration - please remove the device and try to register it again.";
"limeauth.err.activation.pinSetupFailure"   = "Setting up a new PIN code failed - please try to register the device again.";
"limeauth.err.activation.recoveryFailure"   = "It's not possible to complete previously unfinished activation.";

"limeauth.err.wrongPin"                     = "Wrong passcode";
"limeauth.err.wrongPassword"                = "Wrong password";
"limeauth.err.activationWasRemoved"         = "This device has no longer a valid activation.";
"limeauth.err.activationIsBlocked"          = "Activation on this device has been blocked.";

"limeauth.err.network.serverIsDown"         = "The server is down.";
"limeauth.err.network.untrustedSSL"         = "Untrusted SSL connection.";
"limeauth.err.network.isOffline"            = "The device is not connected to the internet.";

"limeauth.err.pa.internal(code)"            = "Internal error: PA-%@";                          // Fallback when there's unhandled PA error
